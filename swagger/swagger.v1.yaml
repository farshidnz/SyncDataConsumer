openapi: 3.0.1
info:
  title: accountsSyncDataConsumer
  version: '1'
paths:
  /v1/Person:
    get:
      tags:
        - Person
      parameters:
        - name: personId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Queries.GetPersonInfo.v1.PersonInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Queries.GetPersonInfo.v1.PersonInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Queries.GetPersonInfo.v1.PersonInfo'
    post:
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.CreatePerson.CreatePersonCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.CreatePerson.CreatePersonCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.CreatePerson.CreatePersonCommand'
      responses:
        '200':
          description: Success
    put:
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.UpdatePerson.UpdatePersonCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.UpdatePerson.UpdatePersonCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.UpdatePerson.UpdatePersonCommand'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.DeletePerson.DeletePersonCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.DeletePerson.DeletePersonCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/accountsSyncDataConsumer.Application.PersonApplication.Commands.DeletePerson.DeletePersonCommand'
      responses:
        '200':
          description: Success
  /v1/WeatherForecast:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastResponse'
components:
  schemas:
    accountsSyncDataConsumer.Application.PersonApplication.Commands.CreatePerson.CreatePersonCommand:
      type: object
      properties:
        personId:
          type: string
          nullable: true
      additionalProperties: false
    accountsSyncDataConsumer.Application.PersonApplication.Commands.DeletePerson.DeletePersonCommand:
      type: object
      properties:
        personId:
          type: string
          nullable: true
      additionalProperties: false
    accountsSyncDataConsumer.Application.PersonApplication.Commands.UpdatePerson.UpdatePersonCommand:
      type: object
      properties:
        personId:
          type: string
          nullable: true
        thought:
          type: string
          nullable: true
      additionalProperties: false
    accountsSyncDataConsumer.Application.PersonApplication.Queries.GetPersonInfo.v1.PersonInfo:
      type: object
      properties:
        description:
          type: string
          nullable: true
      additionalProperties: false
    accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastResponse:
      type: object
      properties:
        weatherForecasts:
          type: array
          items:
            $ref: '#/components/schemas/accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastVM'
          nullable: true
      additionalProperties: false
    accountsSyncDataConsumer.Application.WeatherForecasts.Queries.GetWeatherForecasts.WeatherForecastVM:
      type: object
      properties:
        date:
          type: string
          format: date-time
        temperature:
          type: string
          nullable: true
        outlook:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Standard Authorization header using the Bearer scheme. Example: "bearer {token}"'
      name: Authorization
      in: header
security:
  - Bearer: [ ]